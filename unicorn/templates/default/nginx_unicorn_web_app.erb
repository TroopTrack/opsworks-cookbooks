upstream unicorn_<%= @application[:domains].first %> {
 server unix:<%= @application[:deploy_to]%>/shared/sockets/unicorn.sock fail_timeout=0;
}

server {
  <% if @application[:nginx][:use_proxy_protocol] %> 
    listen 80 proxy_protocol;
  <% else %>
    listen 80;
  <% end %>
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.access.log;

  keepalive_timeout 5;

  client_max_body_size 1024m;

  root <%= @application[:absolute_document_root] %>;

  <% if @application[:nginx][:force_ssl] %>
    if ($http_x_forwarded_proto != 'https') {
      rewrite https://$host/$request_uri? permanent;
    }
  <% end %>
                                              
  <% if @application[:block_location_403] =~ /\S/ %>
  location = <%= @application[:block_location_403]%> {
    access_log off;
    log_not_found off;
    error_log off;
    deny all;
  }
  <% end %>

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    <% if @application[:nginx][:force_ssl] %>
    proxy_set_header X-Forwarded-Proto https;
    <% end %>
    proxy_set_header Host $http_host;
    proxy_redirect off;

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }
  }

  <% if @application[:nginx][:websocket_endpoint] %>
  location ~ <%=@application[:nginx][:websocket_endpoint]%>$ {
    proxy_pass http://unicorn_<%= @application[:domains].first %>;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_http_version 1.1;
  }
  <% end %>

  location ^~ /<%= @application[:nginx][:assets_dir].strip %>/ {
    location ~* "^.*?\.(eot)|(ttf)|(woff)|(woff2)$" {
      add_header Access-Control-Allow-Origin *;
    }

    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }

  <% if @application[:block_user_agent] =~ /\S/ %>
  if ($http_user_agent ~* "<%= @application[:block_user_agent]%>") { return 403; }
  <% end %>
}

<% if @application[:ssl_support] %>
server {
  listen   443;
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>-ssl.access.log;

  ssl on;
  ssl_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @application[:domains].first %>.key;
  <% if @application[:ssl_certificate_ca] -%>
  ssl_client_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.ca;
  <% end -%>

  keepalive_timeout 5;

  client_max_body_size 1024m;

  root <%= @application[:absolute_document_root] %>;
  
  <% if @application[:block_location_403] =~ /\S/ %>
  location = <%= @application[:block_location_403]%> {
    access_log off;
    log_not_found off;
    error_log off;
    deny all;
  }
  <% end %>

  location / {
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }
  }

  <% if @application[:nginx][:websocket_endpoint] %>
  location ~ <%=@application[:nginx][:websocket_endpoint]%>$ { 
    proxy_set_header X-Forwarded-Proto https;
    proxy_pass http://unicorn_<%= @application[:domains].first %>;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
  <% end %>
                                                         
  location ^~ /assets/ {
    location ~* "^.*?\.(eot)|(ttf)|(woff)|(woff2)$" {
      add_header Access-Control-Allow-Origin *;
    }

    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }

  <% if @application[:block_user_agent] =~ /\S/ %>
  if ($http_user_agent ~* "<%= @application[:block_user_agent]%>") { return 403; }
  <% end %>
}
<% end %>
